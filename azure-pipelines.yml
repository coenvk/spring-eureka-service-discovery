# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '9d895700-ba63-4bc7-aec2-fdd8da55a840'

  # Web app name
  containerAppName: 'spring-eureka-service-discovery'

  # Resource group name
  resourceGroupName: 'notification-system-rg'

  # Docker
  dockerUsername: 'coenvk'
  dockerPassword: 'D-Z.oX6MfbC*HmmOA^sh*'
  imageName: 'spring-eureka-service-discovery'

  # Environment name
  environmentName: 'notification-system-env'

  # Agent pool name
  poolName: 'Self-hosted Azure Pipelines'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool: $(poolName)

    steps:
    - task: DeleteFiles@1
      displayName: 'Cleanup Artifact Staging Directory'
      inputs:
        SourceFolder: '$(Build.ArtifactStagingDirectory)'
        Contents: '**/*'

    - task: DeleteFiles@1
      displayName: 'Cleanup Artifact Directory'
      inputs:
       SourceFolder: '$(Pipeline.Workspace)'
       Contents: 'drop/**/*'

    - task: Maven@4
      displayName: 'Maven Clean'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        jdkArchitectureOption: 'x64'

    - task: Maven@4
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx1024m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/Dockerfile
          **/target/*.?(war|jar)
          !**/target/original*.?(war|jar)
        TargetFolder: $(Build.ArtifactStagingDirectory)
    
    - task: Docker@2
      displayName: Docker Build and Push
      inputs:
        containerRegistry: 'Docker Hub'
        repository: '$(dockerUsername)/$(imageName)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.ArtifactStagingDirectory)/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxContainerApp
    displayName: Deploy Linux Container App
    environment: $(environmentName)
    pool: $(poolName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            displayName: 'Azure CLI: deploy container app'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az config set extension.use_dynamic_install=yes_without_prompt
                az containerapp up -n $(containerAppName) -g $(resourceGroupName) --location westeurope --image $(imageName):latest --environment $(environmentName) --ingress external --target-port 8761 --registry-username $(dockerUsername) --registry-password $(dockerPassword) --registry-server hub.docker.com --query properties.configuration.ingress.fqdn
